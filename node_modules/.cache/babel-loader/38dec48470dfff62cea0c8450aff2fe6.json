{"ast":null,"code":"var _jsxFileName = \"/home/rashi/Documents/sem 8/project/User-Job-Application/src/AdminDashboard.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport axios from './config/axios';\n\nclass AdminDashboard extends React.Component {\n  constructor() {\n    super();\n\n    this.changeTitle = title => {\n      this.setState({\n        selectedJob: title\n      });\n    };\n\n    this.handleViewDetails = id => {\n      axios.get(`/users/application-form/${id}`).then(response => {\n        const candidate = response.data;\n        console.log('display data', candidate);\n        alert(`${candidate.name}- ${candidate.email}- ${candidate.phone}`);\n      });\n    };\n\n    this.handleStatus = (id, status) => {\n      axios.put(`/users/application-form/update/${id}`, {\n        status\n      }).then(response => {\n        console.log(response.data);\n        const candidate = response.data;\n        alert(`candidate has been ${candidate.status}`);\n        this.setState(prevState => ({\n          candidates: prevState.candidates.map(cand => {\n            if (cand._id === candidate._id) {\n              return { ...candidate\n              };\n            } else {\n              return { ...cand\n              };\n            }\n          })\n        }));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      candidates: [],\n      jobTitle: ['Front-End Developer', 'Node.js Developer', 'MEAN Stack Developer', 'FULL Stack Developer'],\n      selectedJob: 'Front-End Developer'\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/users/application-forms').then(response => {\n      console.log(response.data);\n      const candidates = response.data;\n      this.setState({\n        candidates\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"AdminDashboard\"), this.state.jobTitle.map((title, i) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: i,\n        onClick: () => {\n          this.changeTitle(title);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 32\n        }\n      }, title);\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, this.state.selectedJob, \"s\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"List of candidates applied for \", this.state.selectedJob), /*#__PURE__*/React.createElement(\"table\", {\n      border: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Technical Skills\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, \"Experience\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"Applied Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"View Details\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Update Application Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, this.state.candidates.filter(candidate => candidate.jobTitle === this.state.selectedJob).map((candidate, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, candidate.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 41\n        }\n      }, candidate.skills), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }\n      }, candidate.experience), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 41\n        }\n      }, moment(candidate.createdAt).format(\"MM/DD/YYYY\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.handleViewDetails(candidate._id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }\n      }, \"View Details\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      }, candidate.status === 'applied' ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.handleStatus(candidate._id, 'shortlisted');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 49\n        }\n      }, \"shortlist\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.handleStatus(candidate._id, 'rejected');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 49\n        }\n      }, \"reject\")) : /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      }, candidate.status)));\n    }))));\n  }\n\n}\n\nexport default AdminDashboard;","map":{"version":3,"sources":["/home/rashi/Documents/sem 8/project/User-Job-Application/src/AdminDashboard.js"],"names":["React","moment","axios","AdminDashboard","Component","constructor","changeTitle","title","setState","selectedJob","handleViewDetails","id","get","then","response","candidate","data","console","log","alert","name","email","phone","handleStatus","status","put","prevState","candidates","map","cand","_id","catch","err","state","jobTitle","componentDidMount","render","i","filter","skills","experience","createdAt","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AACA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CACA;AACIC,EAAAA,WAAW,GACX;AACI;;AADJ,SAoBAC,WApBA,GAoBaC,KAAD,IAAS;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAACF;AAAb,OAAd;AACH,KAtBD;;AAAA,SAuBAG,iBAvBA,GAuBmBC,EAAD,IAAM;AACpBT,MAAAA,KAAK,CAACU,GAAN,CAAW,2BAA0BD,EAAG,EAAxC,EACCE,IADD,CACOC,QAAD,IAAY;AACd,cAAMC,SAAS,GAACD,QAAQ,CAACE,IAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BH,SAA3B;AACAI,QAAAA,KAAK,CAAE,GAAEJ,SAAS,CAACK,IAAK,KAAIL,SAAS,CAACM,KAAM,KAAIN,SAAS,CAACO,KAAM,EAA3D,CAAL;AACH,OALD;AAMH,KA9BD;;AAAA,SA+BAC,YA/BA,GA+Ba,CAACZ,EAAD,EAAIa,MAAJ,KAAa;AACtBtB,MAAAA,KAAK,CAACuB,GAAN,CAAW,kCAAiCd,EAAG,EAA/C,EAAiD;AAACa,QAAAA;AAAD,OAAjD,EACCX,IADD,CACOC,QAAD,IAAY;AACdG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACA,cAAMD,SAAS,GAACD,QAAQ,CAACE,IAAzB;AACAG,QAAAA,KAAK,CAAE,sBAAqBJ,SAAS,CAACS,MAAO,EAAxC,CAAL;AACA,aAAKhB,QAAL,CAAckB,SAAS,KAAG;AACtBC,UAAAA,UAAU,EAACD,SAAS,CAACC,UAAV,CAAqBC,GAArB,CAAyBC,IAAI,IAAE;AACtC,gBAAGA,IAAI,CAACC,GAAL,KAAWf,SAAS,CAACe,GAAxB,EACA;AACI,qBAAO,EAAC,GAAGf;AAAJ,eAAP;AACH,aAHD,MAKA;AACI,qBAAO,EAAC,GAAGc;AAAJ,eAAP;AACH;AACJ,WATU;AADW,SAAH,CAAvB;AAYH,OAjBD,EAkBCE,KAlBD,CAkBQC,GAAD,IAAO;AACVf,QAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH,OApBD;AAqBH,KArDD;;AAEI,SAAKC,KAAL,GAAW;AACPN,MAAAA,UAAU,EAAC,EADJ;AAEPO,MAAAA,QAAQ,EAAC,CAAC,qBAAD,EAAuB,mBAAvB,EAA2C,sBAA3C,EAAkE,sBAAlE,CAFF;AAGPzB,MAAAA,WAAW,EAAC;AAHL,KAAX;AAKH;;AACD0B,EAAAA,iBAAiB,GACjB;AACIjC,IAAAA,KAAK,CAACU,GAAN,CAAU,0BAAV,EACCC,IADD,CACOC,QAAD,IAAY;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACA,YAAMW,UAAU,GAACb,QAAQ,CAACE,IAA1B;AACA,WAAKR,QAAL,CAAc;AAACmB,QAAAA;AAAD,OAAd;AACH,KALD,EAMCI,KAND,CAMQC,GAAD,IAAO;AACVf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH,KARD;AASH;;AAmCDI,EAAAA,MAAM,GACN;AACI,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAGQ,KAAKH,KAAL,CAAWC,QAAX,CAAoBN,GAApB,CAAwB,CAACrB,KAAD,EAAO8B,CAAP,KAAW;AAC/B,0BAAO;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,OAAO,EAAE,MAAI;AAChC,eAAK/B,WAAL,CAAiBC,KAAjB;AACH,SAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEHA,KAFG,CAAP;AAGH,KAJD,CAHR,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK0B,KAAL,CAAWxB,WAAhB,MAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAmC,KAAKwB,KAAL,CAAWxB,WAA9C,CAXJ,eAaI;AAAO,MAAA,MAAM,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCANJ,CADJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKwB,KAAL,CAAWN,UAAX,CAAsBW,MAAtB,CAA6BvB,SAAS,IAAEA,SAAS,CAACmB,QAAV,KAAqB,KAAKD,KAAL,CAAWxB,WAAxE,EAAqFmB,GAArF,CAAyF,CAACb,SAAD,EAAWsB,CAAX,KAAe;AACpG,0BACI;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKtB,SAAS,CAACK,IAAf,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,SAAS,CAACwB,MAAf,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKxB,SAAS,CAACyB,UAAf,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKvC,MAAM,CAACc,SAAS,CAAC0B,SAAX,CAAN,CAA4BC,MAA5B,CAAmC,YAAnC,CAAL,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAQ,QAAA,OAAO,EAAE,MAAI;AACrB,eAAKhC,iBAAL,CAAuBK,SAAS,CAACe,GAAjC;AACH,SAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,CALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,SAAS,CAACS,MAAV,KAAmB,SAAnB,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAE,MAAI;AACjB,eAAKD,YAAL,CAAkBR,SAAS,CAACe,GAA5B,EAAgC,aAAhC;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAII;AAAQ,QAAA,OAAO,EAAE,MAAI;AACjB,eAAKP,YAAL,CAAkBR,SAAS,CAACe,GAA5B,EAAgC,UAAhC;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADC,gBAUD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASf,SAAS,CAACS,MAAnB,CAXJ,CARJ,CADJ;AAwBH,KAzBD,CAFR,CAXJ,CAbJ,CADJ;AA0DH;;AApHL;;AAuHA,eAAerB,cAAf","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport axios from './config/axios'\nclass AdminDashboard extends React.Component\n{\n    constructor()\n    {\n        super()\n        this.state={\n            candidates:[],\n            jobTitle:['Front-End Developer','Node.js Developer','MEAN Stack Developer','FULL Stack Developer'],\n            selectedJob:'Front-End Developer'\n        }\n    }\n    componentDidMount()\n    {\n        axios.get('/users/application-forms')\n        .then((response)=>{\n            console.log(response.data)\n            const candidates=response.data\n            this.setState({candidates})\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n    changeTitle=(title)=>{\n        this.setState({selectedJob:title})\n    }\n    handleViewDetails=(id)=>{\n        axios.get(`/users/application-form/${id}`)\n        .then((response)=>{\n            const candidate=response.data\n            console.log('display data',candidate)\n            alert(`${candidate.name}- ${candidate.email}- ${candidate.phone}`)\n        })\n    }\n    handleStatus=(id,status)=>{\n        axios.put(`/users/application-form/update/${id}`,{status})\n        .then((response)=>{\n            console.log(response.data)\n            const candidate=response.data\n            alert(`candidate has been ${candidate.status}`)\n            this.setState(prevState=>({\n                candidates:prevState.candidates.map(cand=>{\n                    if(cand._id===candidate._id)\n                    {\n                        return {...candidate}\n                    }\n                    else\n                    {\n                        return {...cand}\n                    }\n                })\n            }))\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n    render()\n    {\n        return(\n            <div>\n                <h2>AdminDashboard</h2>\n                {\n                    this.state.jobTitle.map((title,i)=>{\n                        return <button key={i} onClick={()=>{\n                            this.changeTitle(title)\n                        }}>{title}</button>\n                    })\n                }\n\n                <h1>{this.state.selectedJob}s</h1>\n                <p>List of candidates applied for {this.state.selectedJob}</p>\n\n                <table border='2'>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Technical Skills</th>\n                            <th>Experience</th>\n                            <th>Applied Date</th>\n                            <th>View Details</th>\n                            <th>Update Application Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.candidates.filter(candidate=>candidate.jobTitle===this.state.selectedJob).map((candidate,i)=>{\n                                return (\n                                    <tr key={i}>\n                                        <td>{candidate.name}</td>\n                                        <td>{candidate.skills}</td>\n                                        <td>{candidate.experience}</td>\n                                        <td>{moment(candidate.createdAt).format(\"MM/DD/YYYY\")}</td>\n                                        <td><button onClick={()=>{\n                                            this.handleViewDetails(candidate._id)\n                                        }}>View Details</button></td>\n                                        <td>\n                                            {candidate.status==='applied'?(\n                                            <div>\n                                                <button onClick={()=>{\n                                                    this.handleStatus(candidate._id,'shortlisted')\n                                                }}>shortlist</button>\n                                                <button onClick={()=>{\n                                                    this.handleStatus(candidate._id,'rejected')\n                                                }}>reject</button>\n                                            </div>\n                                        ):(\n                                            <button>{candidate.status}</button>\n                                        )}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default AdminDashboard"]},"metadata":{},"sourceType":"module"}